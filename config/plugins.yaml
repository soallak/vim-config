---
# PLUGINS
# ===
# See config/plugins/all.vim for plugin mappings and config/plugins/*.vim

# Startup
# -------
- repo: Shougo/dein.vim
- { repo: rafi/awesome-vim-colorschemes, merged: 0 }
  #
# Vim8 only:
- { repo: roxma/nvim-yarp, if: "! has('nvim')", depends: vim-hug-neovim-rpc }
- { repo: roxma/vim-hug-neovim-rpc, if: "! has('nvim')" }

# ==========================================
# Plugins
# --------

- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/plugins/defx.vim

- repo: kristijanhusak/defx-git

- repo: kristijanhusak/defx-icons

- repo: nathanaelkane/vim-indent-guides
  on_event: VimEnter
  hook_add: |
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_tab_guides = 0
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_guide_size = 1
    let g:indent_guides_exclude_filetypes = [
      \ 'help', 'denite', 'denite-filter', 'startify',
      \ 'vista', 'vista_kind', 'tagbar', 'nerdtree',
      \ 'lsp-hover', 'clap_input'
      \ ]

- repo: jackguo380/vim-lsp-cxx-highlight
  on_ft: ['cpp']
  hook_add: |
    let g:lsp_cxx_hl_use_text_props = 1

- repo: rhysd/committia.vim
  on_path: [ COMMIT_EDITMSG, MERGE_MSG ]
  hook_source: let g:committia_min_window_width = 70

- repo: iamcco/markdown-preview.nvim
  hook_source: source $VIM_PATH/config/plugins/markdown_preview.vim
  on_ft: ['markdown', 'pandoc.markdown', 'rmd']
  build: 'sh -c "cd app && npm install"'

- repo: lervag/vimtex
  on_ft: tex
  hook_add: |
    let g:tex_flavor = "latex"
    let g:vimtex_enabled = 1
    let g:vimtex_view_method = 'general'
    let g:vimtex_view_general_viewer = 'evince'
    let g:vimtex_compiler_latexmk = {'callback': 0, 'options':['-pdf']}
    let g:vimtex_complete_enabled = 1
    let g:vimtex_quick_fix_mode=0

- repo: neoclide/coc.nvim
  rev: release
  merged: 0
  hook_source: source $VIM_PATH/config/plugins/coc.vim
  hook_add: |
    let g:coc_global_extensions = [
      \ 'coc-clangd',
      \ 'coc-css',
      \ 'coc-cmake',
      \ 'coc-html',
      \ 'coc-json',
      \ 'coc-vimtex',
      \ 'coc-xml',
      \ 'coc-yaml'
      \ ]

- repo: Raimondi/delimitMate
  on_event: FileType
  hook_source: |
    let g:delimitMate_expand_cr = 0
    let g:delimitMate_expand_space = 1
    let g:delimitMate_smart_quotes = 1
    let g:delimitMate_expand_inside_quotes = 0
    let g:delimitMate_excluded_ft = 'mail,txt'
    augroup user_plugin_delimitMate
      au!
      au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
      au FileType tex let b:delimitMate_quotes = ""
      au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
      au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
    augroup END

- repo: Shougo/denite.nvim
  on_cmd: Denite
  trusted: 1
  hook_source: source $VIM_PATH/config/plugins/denite.vim

- repo: embear/vim-localvimrc
  hook_source: |
    let g:localvimrc_name = ['.lvimrc', '.vimrc']
    let g:localvimrc_ask = 0
    let g:localvimrc_debug = 1

- repo: luochen1990/rainbow
  hook_source: |
    let g:rainbow_active = 1

- repo: tikhomirov/vim-glsl
  hook_source: |
    autocmd! BufNewFile,BufRead *.frag,*.vert set ft=glsl
