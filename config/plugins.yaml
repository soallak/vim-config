---
# PLUGINS
# ===
# See config/plugins/all.vim for plugin mappings and config/plugins/*.vim

# Startup
# -------
- repo: Shougo/dein.vim
- { repo: rafi/awesome-vim-colorschemes, merged: 0 }

# Vim8 only:
- { repo: roxma/nvim-yarp, if: "! has('nvim')", depends: vim-hug-neovim-rpc }
- { repo: roxma/vim-hug-neovim-rpc, if: "! has('nvim')" }

# Lazy Loading
# ==========================================

# Languages
# ---------

# ==========================================
# Commands
# --------
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/plugins/defx.vim

- { repo: kristijanhusak/defx-git, on_source: defx.nvim }
- { repo: kristijanhusak/defx-icons, on_source: defx.nvim }

# ==========================================
# Interface
# ---------
- repo: airblade/vim-gitgutter
  on_event: FileType
  hook_add: |
    let g:gitgutter_map_keys = 0
    let g:gitgutter_sign_added = '▎'
    let g:gitgutter_sign_modified = '▎'
    let g:gitgutter_sign_removed = '▍'
    let g:gitgutter_sign_removed_first_line = '▘'
    let g:gitgutter_sign_modified_removed = '▍'
    let g:gitgutter_preview_win_floating = 1
    let g:gitgutter_sign_allow_clobber = 0
    let g:gitgutter_sign_priority = 0
    let g:gitgutter_override_sign_column_highlight = 0

- repo: noscript/vim-indent-guides
  on_event: VimEnter
  hook_post_source: IndentGuidesEnable
  hook_add: |
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_tab_guides = 0
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_guide_size = 1
    let g:indent_guides_exclude_filetypes = [
      \ 'help', 'denite', 'denite-filter', 'startify',
      \ 'vista', 'vista_kind', 'tagbar', 'nerdtree',
      \ 'lsp-hover', 'clap_input'
      \ ]

- repo: rhysd/committia.vim
  on_path: [ COMMIT_EDITMSG, MERGE_MSG ]
  hook_source: let g:committia_min_window_width = 70

# ==========================================
# Completion and code analysis
# ----------

- repo: neoclide/coc.nvim
  rev: release
  merged: 0

- repo: SirVer/ultisnips
  if: has('python3')
  on_event: FileType
  hook_add: |
    let g:UltiSnipsExpandTrigger = '<C-l>'
    let g:UltiSnipsListSnippets = ''
    let g:UltiSnipsJumpForwardTrigger = '<C-f>'
    let g:UltiSnipsJumpBackwardTrigger = '<C-b>'

- repo: honza/vim-snippets
  depends: ultisnips
  on_event: FileType
  if: has('python3')
  merged: 0

- repo: dense-analysis/ale
  on_event: FileType
  hook_add: |
    let g:ale_disable_lsp = 0
    let g:ale_echo_delay = 100
    let g:ale_lint_delay = 1000
    let g:ale_echo_msg_format = '%linter%: %code: %%s [%severity%]'
    let g:ale_history_enabled = 0
    let g:ale_sign_error = '✖'
    let g:ale_sign_warning = 'ⁱ'
    let g:ale_maximum_file_size = 500000

- repo: Raimondi/delimitMate
  on_event: FileType
  hook_source: |
    let g:delimitMate_expand_cr = 0
    let g:delimitMate_expand_space = 1
    let g:delimitMate_smart_quotes = 1
    let g:delimitMate_expand_inside_quotes = 0
    let g:delimitMate_excluded_ft = 'mail,txt'
    augroup user_plugin_delimitMate
      au!
      au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
      au FileType tex let b:delimitMate_quotes = ""
      au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
      au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
    augroup END

# ==========================================
# Denite
# ------
- repo: Shougo/denite.nvim
  on_cmd: Denite
  trusted: 1
  hook_source: source $VIM_PATH/config/plugins/denite.vim

# ==========================================
# Operators
# ---------

# ==========================================
# Text objects
# ------------
